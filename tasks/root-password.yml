# roles/mariadb/tasks/root-password.yml
---

- name: Check if a custom root password is specified
  debug:
    msg: >
      Warning!! the MariaDB root password was left empty. Please set a custom
      password with role variable mariadb_root_password to secure your database
      server!
  when: not mariadb_root_password
  tags: mariadb

# This command will exit non-zero when the root password was set previously
- name: Check if root password is unset
  shell: >
    mysql -u root
    -p'{{ mariadb_root_password }}'
    -h localhost
    -S {{ mariadb_socket }}
    -e "quit"
  changed_when: false
  ignore_errors: true
  register: root_pwd_check
  tags: mariadb

# Repeat runs with the same password can continue idempotently, otherwise fail.
- name: Check if the specified root password is already set
  shell: >
    mysqladmin -u root -p{{ mariadb_root_password }} status
  changed_when: false
  no_log: true
  when: root_pwd_check.rc != 0
  tags: mariadb

- name: Check for previously set unix_socket in plugin column
  command: >
    mysql -N -s -S {{ mariadb_socket }} -u root -e
    "SELECT plugin from mysql.user WHERE user = 'root'"
  register: plugin_root_result
  changed_when: plugin_root_result.stdout is search('unix_socket')
  when: root_pwd_check.rc == 0
  tags: mariadb

- name: Set MariaDB root password for the first time (root@localhost)
  mysql_user:
    name: root
    password: "{{ mariadb_root_password }}"
    host: localhost
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  when: root_pwd_check.rc != 0
  tags: mariadb

- name: Remove unix_socket plugin if previously set
  command: >
    mysql -S {{ mariadb_socket }} -u root -e
    "UPDATE mysql.user SET plugin = '' WHERE user = 'root'; FLUSH PRIVILEGES;"
  when:
    - root_pwd_check.rc == 0
    - plugin_root_result.stdout is search('unix_socket')
  tags: mariadb

- name: Set MariaDB root password for 127.0.0.1, ::1, FQDN
  mysql_user:
    name: root
    password: "{{ mariadb_root_password }}"
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: present
  with_items:
    - ::1
    - 127.0.0.1
    - "{{ ansible_fqdn }}"
  when: root_pwd_check.rc == 0
  tags: mariadb
